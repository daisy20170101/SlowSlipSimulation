# -*- Config -*- (syntax highlighting)
# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# In this problem we generate Green's functions that will be used to
# invert synthetic data generated from step06. There are two
# different sub-problems:
#
# Step07a: Generate Green's functions corresponding to left-lateral
#          slip on the subduction interface (slab top).
# Step07b: Generate Green's functions corresponding to reverse
#          slip on the subduction interface (slab top).
#
# Materials
#   All four blocks use the linear, isotropic elastic material model
#   (mat_elastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg).
#
# Fault
#   Slip impulses for left-lateral slip on the suduction interface (slab top).
#
# Output
#   We output the displacements for the slip impulses on the ground
#   surface at at the fake cGPS locations defined by cgps_sites.txt.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# Parameter files:
#   - pylithapp.cfg (common paramters, read by default)
#   - greensfns.cfg (greensfns paramters, read by default)
#   - step07a.cfg (main parameter file for step07a)
#   - mat_elastic.cfg (material models and parameters)
#   - solver_fieldsplit.cfg (field split solver settings)
#
# We use the field split preconditioner with algebraic multigrid for
# the displacement fields and the custom preconditioner for the
# Lagrange multiplier field. We use these solver settings in several
# simulations, so we put them in a separate file.
#
# TO RUN THE SIMULATION:
#   pylith --problem=pylith.problems.GreensFns step07a.cfg mat_elastic.cfg solver_fieldsplit.cfg 
#
# Output will be directed to the "output" directory..

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step07a-parameters.json
problem.progress_monitor.filename = output/step07a-progress.txt

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem.interfaces.slab]
# Impulses for reverse slip.
# Note that it is possible to apply both left-lateral and updip slip
# (impulse_dof = [0,1]), but we separate the impulses into two problems.
impulse_dof = [1]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Add cggs_sites to solution output.
[pylithapp.problem.formulation]
#output = [domain, subdomain, cgps_sites]
output= [domain, subdomain]
#output.cgps_sites = pylith.meshio.OutputSolnPoints

# Domain, subdomain, and cgs_sites
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step07a-domain.h5
# Turn off data fields.
vertex_data_fields = []

[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step07a-groundsurf.h5
# Uncomment to turn off data fields.
vertex_data_fields = []

#[pylithapp.problem.formulation.output.cgps_sites]
#writer = pylith.meshio.DataWriterHDF5
#writer.filename = output/step07a-cgps_sites.h5
#vertex_data_fields = [displacement,velocity]

# Set coordinate system associated with file with cGPS sites
#reader.filename = CentroidPoint.txt
#coordsys = spatialdata.geocoords.CSGeo
#coordsys.space_dim = 3
#coordsys.datum_horiz = WGS84
#coordsys.datum_vert = mean sea level

# Fault
[pylithapp.problem.interfaces.slab.output]
writer.filename = output/step07a-fault-slab.h5
vertex_data_fields = [traction_change]

# Materials
[pylithapp.problem.materials.slab.output]
writer.filename = output/step07a-slab.h5

[pylithapp.problem.materials.box.output]
writer.filename = output/step07a-box.h5



# End of file
